{% comment %}
  Renders a megamenu for the header.

  Usage:
  {% render 'header-mega-menu' %}
{% endcomment %}

<nav class="header__inline-menu">
  <ul class="list-menu list-menu--inline" role="list">
    {%- for link in section.settings.menu.links -%}
      <li>
        {%- if link.links != blank -%}
          <header-menu>
            <details id="Details-HeaderMenu-{{ forloop.index }}" class="mega-menu">
              <summary id="HeaderMenu-{{ link.handle }}" class="header__menu-item list-menu__item link focus-inset">
                <span {%- if link.child_active %} class="header__active-menu-item" {% endif %}> {{- link.title | escape -}}</span>
                {{- 'icon-caret.svg' | inline_asset_content -}}
              </summary>
              <div id="MegaMenu-Content-{{ forloop.index }}" class="mega-menu__content color-{{ section.settings.menu_color_scheme }} gradient motion-reduce global-settings-popup" tabindex="-1">
                <ul class="mega-menu__list page-width line20{% if link.levels == 1 %} mega-menu__list--condensed{% endif %}" role="list">
                 
                  {%- for childlink in link.links -%}
                    <li class="megamenu_{{ childlink.handle | strip }}">
                      <div class="megamenu__left-menu">
                      <a id="HeaderMenu-{{ link.handle }}-{{ childlink.handle }}" href="{{ childlink.url }}" class="mega-menu__link mega-menu__link--level-2 link{% if childlink.current %} mega-menu__link--active{% endif %}" {% if childlink.current %} aria-current="page" {% endif %}>
                        {{ childlink.title | escape }}
                      </a>
                      {%- if childlink.links != blank -%}
                        <ul class="list-unstyled" role="list">
                          {%- for grandchildlink in childlink.links -%}
                            <li class="megamenu_{{ grandchildlink.handle | strip }} {%- if forloop.index == 1 -%} active {%- endif -%}">
                              <a 
                                onmouseover="toggleDropdown(this, 'megamenu_{{ grandchildlink.handle | strip }}', 'show', true)" 
                                {% comment %} onmouseout="toggleDropdown(this, 'megamenu_{{ grandchildlink.handle | strip }}', 'show', false)" {% endcomment %}
                                id="HeaderMenu-{{ link.handle }}-{{ childlink.handle }}-{{ grandchildlink.handle }}" href="{{ grandchildlink.url }}" class="mega-menu__link link{% if grandchildlink.current %} mega-menu__link--active{% endif %}" {% if grandchildlink.current %} aria-current="page"{% endif %}>
                                {{ grandchildlink.title | escape }}
                              </a>
                            </li>
                          {%- endfor -%}
                        </ul>
                      {%- endif -%}
                      </div>
                      {%- for grandchildlink in childlink.links -%}
                        {% assign menuname = grandchildlink.handle | strip %}
                        <div class="megamenu__right-menu megamenu_{{ menuname }} {%- if forloop.index == 1 -%} active {%- endif -%}" index="{{ forloop.index }}"> 
                          <a id="HeaderMenu-{{ link.handle }}-{{ grandchildlink.handle }}" href="{{ grandchildlink.url }}" class="mega-menu__link mega-menu__link--level-2 link{% if grandchildlink.current %} mega-menu__link--active{% endif %}" {% if grandchildlink.current %} aria-current="page" {% endif %}>
                            {{ grandchildlink.title | escape }}
                          </a>
                          <ul class="list-unstyled menu" role="list" > 
                            {%- for extralink in linklists[menuname].links -%}
                            <li>
                              <a onmouseover="toggleItemDropdown(this, 'megamenuitem_{{ extralink.handle | strip }}')"
                                
                                id="HeaderMenu-{{ link.handle }}-{{ childlink.handle }}-{{ extralink.handle }}" href="{{ extralink.url }}" class="mega-menu__link link{% if extralink.current %} mega-menu__link--active{% endif %}" {% if extralink.current %} aria-current="page"{% endif %}>
                                {{ extralink.title | escape }}
                              </a>
                              
                              <div class="products megamenuitem_{{ extralink.handle | strip }}  {% if forloop.index == 1 %} active-container {% endif %}" index="products_{{ forloop.index }}">
                                {% comment %} <ul
                                  id="product-grid"
                                  data-id="{{ section.id }}"
                                  class="
                                    grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
                                    grid--{{ section.settings.columns_desktop }}-col-desktop
                                    {% if section.settings.quick_add == 'bulk' %} collection-quick-add-bulk{% endif %}
                                  "
                                >{% endcomment %}
                                {% assign products = extralink.object.products %}
                                {%- for product in products -%}
                                 {% comment %} 
                                  <li
                                    class="grid__item{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                                    {% if settings.animations_reveal_on_scroll %}
                                      data-cascade
                                      style="--animation-order: {{ forloop.index }};"
                                    {% endif %}
                                  > {% endcomment %}
                                  {% render 'card-product',
                                    card_product: product,
                                    media_aspect_ratio: section.settings.image_ratio,
                                    image_shape: section.settings.image_shape,
                                    show_secondary_image: section.settings.show_secondary_image,
                                    show_vendor: section.settings.show_vendor,
                                    show_rating: section.settings.show_rating,
                                    skip_styles: skip_card_product_styles,
                                    section_id: section.id,
                                    quick_add: section.settings.quick_add
                                  %}
                                  {% comment %} </li> {% endcomment %}
                              {%- endfor -%}
                              {% comment %} </ul> {% endcomment %}
                              </div>
                            </li>
                          {%- endfor -%}
                           </ul>  
                        </div>
                      {%- endfor -%}
                    </li>
                  {%- endfor -%}
                </ul>

                
              </div>
            </details>
          </header-menu>
        {%- else -%}
          <a id="HeaderMenu-{{ link.handle }}" href="{{ link.url }}" class="header__menu-item list-menu__item link link--text focus-inset"{% if link.current %} aria-current="page" {% endif %}>
            <span {%- if link.current %} class="header__active-menu-item" {% endif %}>{{- link.title | escape -}}</span>
          </a>
        {%- endif -%}
      </li>
    {%- endfor -%}
  </ul>
</nav>


<script>
// Select all list items with dropdowns
{% comment %} const listItems = document.querySelectorAll('.menu li');
listItems.forEach((item) => {
  // Get the dropdown element inside each li
  const dropdown = item.querySelector('.products');
  const productsdivs = item.querySelectorAll('.products');
  // Add mouseover event
  item.addEventListener('mouseover', () => {
    productsdivs.forEach(productsdiv => {
      {% comment %} console.log(productsdiv) {% endcomment %}
      productsdiv.classList.remove('active-container');
    });
   // dropdown.style.display = 'flex'; 
   console.log(this)
    dropdown.classList.add("active-container"); 
  });
  // Add mouseout event
  item.addEventListener('mouseout', () => {
    //dropdown.style.display = 'none'; 
    {% comment %} dropdown.classList.remove("active-container");  {% endcomment %}
  });
}); {% endcomment %}

function toggleItemDropdown(element, targetClass) {
  const targetDiv = document.querySelector('.' + targetClass);
  var productsdivs = document.querySelectorAll('.products');
  console.log(targetDiv)
  console.log(productsdivs)
  productsdivs.forEach((targetDiv) =>  { 
    console.log(targetDiv);
    targetDiv.classList.remove('active-container');
    targetDiv.parentElement.classList.remove('active')
  });
  document.querySelector('.' + targetClass).parentElement.classList.add('active')
  document.querySelector('.' + targetClass).classList.add('active-container')
}

function toggleDropdown(element, targetClass) {
  const targetDivs = document.querySelectorAll('.' + targetClass);
  targetDivs.forEach((targetDiv) =>  { 
    const parent = targetDiv.parentElement;
    console.log('parent', parent);
    if (!parent) return;
    const siblings = Array.from(parent.children);
    siblings.forEach(sibling => {
        {% comment %} if (targetClass.classList.contains('active')) { {% endcomment %}
           console.log('if')
            sibling.classList.remove('active');
        {% comment %} }else{
          console.log('false')
          document.querySelector('.' + targetClass).classList.add('active');
        } {% endcomment %}
    });
    targetDiv.classList.add('active')
  });
}

</script>